import{d as M,f as d,u as t,c as h,r as u,l as p,E as n,H as N,w as m,b as T,I as L,e as x,t as F,C as E,o as U}from"./index-CHf2SpZO.js";const j=M({__name:"UploadScore",props:{btnName:{type:String,default:"更换"},btnNameModifiers:{},btnClass:{type:String},btnClassModifiers:{},btnType:{type:String,default:"primary"},btnTypeModifiers:{},isBtnLink:{type:Boolean,default:!1},isBtnLinkModifiers:{},id:{type:String,required:!0},idModifiers:{},name:{type:String,required:!0},nameModifiers:{},onSuccess:{type:Function},onSuccessModifiers:{}},emits:["update:btnName","update:btnClass","update:btnType","update:isBtnLink","update:id","update:name","update:onSuccess"],setup(e){const f=d(window.localStorage.getItem("password")),o=d(!1),b=t(e,"btnName"),y=t(e,"btnClass"),g=t(e,"btnType"),S=t(e,"isBtnLink"),v=t(e,"id"),r=t(e,"name"),i=t(e,"onSuccess"),w=async(a,B,l)=>{var c;o.value=!1;const s=(c=a.data)==null?void 0:c.path;await E(v.value,{score:s}).then(()=>{n({message:"更新成功！",type:"success"}),i==null||i.value(s)}).catch(k),l.splice(0,1)},C=a=>{n({message:`上传失败：${r}`,type:"error"}),console.trace(a)};function k(a){n({message:a.msg,type:"warning"})}return(a,B)=>{const l=u("el-button"),s=u("el-upload");return U(),h(s,{action:p(N)(),accept:".jpg,.jpeg,.png",limit:1,"show-file-list":!1,"auto-upload":!0,headers:{password:f.value},data:{name:r.value,category:"score"},"on-success":w,"on-error":C,"before-upload":()=>(p(n)({message:"开始上传，请等候...",type:"info"}),o.value=!0,!0)},{default:m(()=>[T(l,{type:g.value,class:L(y.value),link:S.value,disabled:o.value},{default:m(()=>[x(F(b.value),1)]),_:1},8,["type","class","link","disabled"])]),_:1},8,["action","headers","data","before-upload"])}}});export{j as _};
